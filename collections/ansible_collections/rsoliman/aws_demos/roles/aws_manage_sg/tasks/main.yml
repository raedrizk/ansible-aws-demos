---
# tasks file for aws_manage_sg
- name: Manage Security Group
  amazon.aws.ec2_security_group:
    name: "{{ aws_manage_sg_sg_name_tag }}"
    state: "{{ aws_manage_sg_sg_state }}"
    description: "Ansible Managed Security Group: {{ aws_manage_sg_sg_name_tag }} "
    region: "{{ aws_manage_sg_aws_region }}"
    purge_rules: false
    vpc_id: "{{ aws_manage_sg_vpc_id if (aws_manage_sg_vpc_id is defined and aws_manage_sg_vpc_id != '') else stat_created_vpc_id }}"
  register: managed_sg

- name: Manage Standard Ingress Rules on the SG
  amazon.aws.ec2_security_group:
    name: "{{ aws_manage_sg_sg_name_tag }}"
    state: "{{ aws_manage_sg_sg_state }}"
    description: "Ansible Managed Security Group: {{ aws_manage_sg_sg_name_tag }} "
    region: "{{ aws_manage_sg_aws_region }}"
    purge_rules: false
    vpc_id: "{{ aws_manage_sg_vpc_id if (aws_manage_sg_vpc_id is defined and aws_manage_sg_vpc_id != '') else stat_created_vpc_id }}"
    rules:
      - proto: "{{ item.protocol }}"
        ports:
          - "{{ item.port }}"
        cidr_ip: "{{ item.cidr }}"
        rule_desc: "{{ item.desc }}"
  with_items: "{{ aws_manage_sg_tcp_ingress_ports }}"
  when: aws_manage_sg_tcp_ingress_ports is defined and aws_manage_sg_sg_state == 'present'

- name: Manage Custom Ingress Rules on the SG
  amazon.aws.ec2_security_group:
    name: "{{ aws_manage_sg_sg_name_tag }}"
    state: "{{ aws_manage_sg_sg_state }}"
    description: "Ansible Managed Security Group: {{ aws_manage_sg_sg_name_tag }} "
    region: "{{ aws_manage_sg_aws_region }}"
    purge_rules: false
    vpc_id: "{{ aws_manage_sg_vpc_id if (aws_manage_sg_vpc_id is defined and aws_manage_sg_vpc_id != '') else stat_created_vpc_id }}"
    rules:
      - proto: "{{ item.protocol }}"
        ports:
          - "{{ item.port }}"
        cidr_ip: "{{ item.cidr }}"
        rule_desc: "{{ item.desc }}"
  with_items: "{{ aws_manage_sg_tcp_custom_ingress_port }}"
  when: aws_manage_sg_tcp_custom_ingress_port is defined and aws_manage_sg_tcp_custom_ingress_port != '' and aws_manage_sg_sg_state == 'present'


- name: Setting stats for future tasks
  ansible.builtin.set_stats:
    data:
      stat_created_sg_id: "{{ managed_sg['group_id'] | default('') }}"
  when: managed_sg['group_id'] is defined

- name: Setting facts for future tasks
  ansible.builtin.set_fact:
    stat_created_sg_id: "{{ managed_sg['group_id'] | default('') }}"
  when: managed_sg['group_id'] is defined
